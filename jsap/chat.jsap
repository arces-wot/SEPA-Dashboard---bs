,
		"MQTT_MAPPINGS" : {
			"sparql" : "SELECT * {GRAPH <http://wot.arces.unibo.it/mqtt> {?mapping rdf:type mqtt:Mapping ; mqtt:observation ?observation ; mqtt:topic ?topic}}"
		},
		"MQTT_MAPPER" : {
			"sparql" : "SELECT DISTINCT ?regex ?topic {GRAPH <http://wot.arces.unibo.it/mqtt> {?mapper rdf:type mqtt:Mapper ; mqtt:regex ?regex ; mqtt:topic ?topic}}",
			"forcedBindings" : {
				"mapper" : {
					"type" : "uri",
					"value" : "mqtt:JsonMapper"
				}
			}
		},
		"MQTT_MAPPERS_TOPICS" : {
			"sparql" : "SELECT DISTINCT ?topic {GRAPH <http://wot.arces.unibo.it/mqtt> {?mapper rdf:type mqtt:Mapper ; mqtt:regex ?regex ; mqtt:topic ?topic}}"
		},
		"MQTT_BROKER_TOPICS" : {
			"sparql" : "SELECT ?topic WHERE { GRAPH <http://wot.arces.unibo.it/mqtt> {?broker mqtt:url ?url ; rdf:type mqtt:Broker ; mqtt:port ?port ; mqtt:topic ?topic}}",
			"forcedBindings" : {
				"url" : {
					"type" : "literal",
					"value" : "giove.arces.unibo.it"
				},
				"port" : {
					"type" : "literal",
					"value" : 52877,
					"datatype" : "xsd:integer"
				}
			}
		},
		"FORECAST_N_DAYS" : {
			"sparql" : "SELECT * WHERE {OPTIONAL {?unit qudt:symbol ?symbol} graph <http://wot.arces.unibo.it/forecast> {?obs sosa:hasFeatureOfInterest ?place ; rdf:type swamp:Forecast ; sosa:resultTime ?resultTime ; sosa:phenomenonTime ?timestamp ; sosa:observedProperty ?property ; sosa:hasResult ?res . ?res qudt:numericValue ?value ; qudt:unit ?unit BIND((xsd:dateTime(substr(xsd:string(?timestamp),1,10)) - xsd:dateTime(substr(xsd:string(?resultTime),1,10)))/86400 AS ?diff) FILTER (xsd:dateTime(?resultTime) >= xsd:dateTime(concat(?from,'T00:00:00Z')) && xsd:dateTime(?resultTime) <= xsd:dateTime(concat(?to,'T23:59:59Z')) && (?diff = xsd:integer(?n)) )}} ORDER BY xsd:dateTime(?timestamp)",
			"forcedBindings" : {
				"from" : {
					"type" : "literal",
					"value" : "2019-07-30"
				},
				"to" : {
					"type" : "literal",
					"value" : "2019-08-03"
				},
				"n" : {
					"type" : "literal",
					"value" : "0"
				},
				"place" : {
					"type" : "uri",
					"value" : "swamp:Bertacchini"
				},
				"property" : {
					"type" : "uri",
					"value" : "swamp:LeafAreaIndex"
				}
			}
		},
		"FORECAST_IRRIGATION" : {
			"sparql" : "SELECT ?value ?symbol WHERE {graph <http://wot.arces.unibo.it/forecast> {?obs sosa:hasFeatureOfInterest ?place ; rdf:type swamp:Forecast; sosa:resultTime ?resultTime ; sosa:phenomenonTime ?prediction ; sosa:observedProperty swamp:IrrigationNeeds ; sosa:hasResult ?res . ?res qudt:numericValue ?value ; qudt:unit ?unit} . OPTIONAL {?unit qudt:symbol ?symbol} FILTER (xsd:dateTime(?resultTime) = xsd:dateTime(concat(?from ,'T00:00:00Z')) && xsd:dateTime(?prediction) = xsd:dateTime(concat(?to ,'T00:00:00Z')))}",
			"forcedBindings" : {
				"from" : {
					"type" : "literal",
					"value" : "2019-09-01"
				},
				"to" : {
					"type" : "literal",
					"value" : "2019-09-01"
				},
				"place" : {
					"type" : "uri",
					"value" : "swamp:Bertacchini"
				}
			}
		},
		"FORECAST_LAI" : {
			"sparql" : "SELECT ?value ?symbol WHERE {graph <http://wot.arces.unibo.it/forecast> {?obs sosa:hasFeatureOfInterest ?place ; rdf:type swamp:Forecast; sosa:resultTime ?resultTime ; sosa:phenomenonTime ?prediction ; sosa:observedProperty swamp:LeafAreaIndex ; sosa:hasResult ?res . ?res qudt:numericValue ?value ; qudt:unit ?unit} . OPTIONAL{?unit qudt:symbol ?symbol} FILTER (xsd:dateTime(?resultTime) = xsd:dateTime(concat(?from ,'T00:00:00Z')) && xsd:dateTime(?prediction) = xsd:dateTime(concat(?to ,'T00:00:00Z')))}",
			"forcedBindings" : {
				"from" : {
					"type" : "literal",
					"value" : "2019-09-01"
				},
				"to" : {
					"type" : "literal",
					"value" : "2019-09-01"
				},
				"place" : {
					"type" : "uri",
					"value" : "swamp:Bertacchini"
				}
			}
		},
		"FORECAST_WEATHER_TEMPERATURE" : {
			"sparql" : "SELECT (MAX(?value) AS ?max) (MIN(?value) AS ?min) (AVG(?value) AS ?avg) ?symbol WHERE {graph <http://wot.arces.unibo.it/forecast> {?obs sosa:hasFeatureOfInterest ?place ; rdf:type swamp:Forecast ; sosa:resultTime ?resultTime ; sosa:phenomenonTime ?prediction ; sosa:observedProperty arces-monitor:AirTemperature ; sosa:hasResult ?res . ?res qudt:numericValue ?value ; qudt:unit ?unit } . OPTIONAL {?unit qudt:symbol ?symbol } FILTER (xsd:dateTime(?resultTime) > xsd:dateTime(concat(?from ,'T00:00:00Z')) && xsd:dateTime(?resultTime) < xsd:dateTime(concat(?from ,'T23:59:59Z')) && xsd:dateTime(?prediction) > xsd:dateTime(concat(?to ,'T00:00:00Z')) && xsd:dateTime(?prediction) < xsd:dateTime(concat(?to ,'T23:59:59Z')))}",
			"forcedBindings" : {
				"from" : {
					"type" : "literal",
					"value" : "2019-09-01"
				},
				"to" : {
					"type" : "literal",
					"value" : "2019-09-01"
				},
				"place" : {
					"type" : "uri",
					"value" : "swamp:Bertacchini"
				}
			}
		},
		"FORECAST_WEATHER_PRECIPITATION" : {
			"sparql" : "SELECT (SUM(?value) AS ?sum) ?symbol WHERE {graph <http://wot.arces.unibo.it/forecast> {?obs sosa:hasFeatureOfInterest ?place ; rdf:type swamp:Forecast ; sosa:resultTime ?resultTime ; sosa:phenomenonTime ?prediction ; sosa:observedProperty arces-monitor:Precipitation ; sosa:hasResult ?res . ?res qudt:numericValue ?value ; qudt:unit ?unit } . OPTIONAL {?unit qudt:symbol ?symbol}  FILTER (xsd:dateTime(?resultTime) > xsd:dateTime(concat(?from ,'T00:00:00Z')) && xsd:dateTime(?resultTime) < xsd:dateTime(concat(?from ,'T23:59:59Z')) && xsd:dateTime(?prediction) > xsd:dateTime(concat(?to ,'T00:00:00Z')) && xsd:dateTime(?prediction) < xsd:dateTime(concat(?to ,'T23:59:59Z')))}",
			"forcedBindings" : {
				"from" : {
					"type" : "literal",
					"value" : "2019-09-01"
				},
				"to" : {
					"type" : "literal",
					"value" : "2019-09-01"
				},
				"place" : {
					"type" : "uri",
					"value" : "swamp:Bertacchini"
				}
			}
		},
		"LOG_QUANTITY" : {
			"sparql" : "SELECT * WHERE {GRAPH <http://wot.arces.unibo.it/observation/history> {?result sosa:isResultOf ?observation ; qudt:numericValue ?value; time:inXSDDateTimeStamp ?timestamp} FILTER (xsd:dateTime(?timestamp) > xsd:dateTime(?from) && xsd:dateTime(?timestamp) < xsd:dateTime(?to))} ORDER BY xsd:dateTime(?timestamp)",
			"forcedBindings" : {
				"from" : {
					"datatype" : "xsd:dateTime",
					"type" : "literal",
					"value" : "2019-07-15T00:00:00Z"
				},
				"to" : {
					"datatype" : "xsd:dateTime",
					"type" : "literal",
					"value" : "2019-07-15T23:59:59Z"
				},
				"observation" : {
					"type" : "uri",
					"value" : "arces-monitor:SanMicheleLevelsL1"
				}
			}
		},
		"PLACES" : {
			"sparql" : "SELECT * WHERE {GRAPH <http://wot.arces.unibo.it/context> {?place rdf:type schema:Place; schema:name ?name ;  schema:GeoCoordinates ?coordinate . ?coordinate schema:latitude ?lat ; schema:longitude ?long}}"
		},
		"NO_CHILD" : {
			"sparql" : "SELECT * WHERE {GRAPH <http://wot.arces.unibo.it/context> {?root rdf:type schema:Place ; schema:name ?name . FILTER NOT EXISTS{?child schema:containedInPlace ?root}}}"
		},
		"MAP_PLACES" : {
			"sparql" : "SELECT * WHERE {GRAPH <http://wot.arces.unibo.it/context> {?root rdf:type schema:Place; schema:name ?name ;  schema:GeoCoordinates ?coordinate . ?coordinate schema:latitude ?lat ; schema:longitude ?long.  FILTER NOT EXISTS{?root schema:containedInPlace ?place}}}"
		},
		"CONTAINED_PLACES" : {
			"sparql" : "SELECT * WHERE {GRAPH <http://wot.arces.unibo.it/context> {?root schema:containsPlace ?child . ?child schema:name ?name}}",
			"forcedBindings" : {
				"root" : {
					"type" : "uri",
					"value" : "arces-monitor:Mars"
				}
			}
		},
		"ROOT_PLACES" : {
			"sparql" : "SELECT * WHERE {GRAPH <http://wot.arces.unibo.it/context> {?root rdf:type schema:Place . ?root schema:name ?name .  FILTER NOT EXISTS{?root schema:containedInPlace ?place} }}"
		},
		"OBSERVATIONS" : {
			"sparql" : "SELECT * WHERE {?unit qudt:symbol ?symbol . GRAPH <http://wot.arces.unibo.it/context> {?location rdf:type schema:Place ; schema:name ?name ; schema:GeoCoordinates ?coordinate . ?coordinate schema:latitude ?lat ; schema:longitude ?long}.GRAPH <http://wot.arces.unibo.it/observation> {?observation rdf:type sosa:Observation ; rdfs:label ?label ; sosa:hasResult ?quantity ; sosa:hasFeatureOfInterest ?location . ?quantity rdf:type qudt:QuantityValue ; qudt:unit ?unit . OPTIONAL {?quantity qudt:numericValue ?value} . OPTIONAL {?observation sosa:resultTime ?timestamp}}}"
		},
		"OBSERVATIONS_BY_LOCATION" : {
			"sparql" : "SELECT * WHERE {GRAPH <http://wot.arces.unibo.it/observation> {?observation sosa:hasFeatureOfInterest ?location ; rdf:type sosa:Observation ; rdfs:label ?label ; sosa:hasResult ?quantity . ?quantity rdf:type qudt:QuantityValue ; qudt:unit ?unit . OPTIONAL {?quantity qudt:numericValue ?value} . OPTIONAL {?observation sosa:resultTime ?timestamp}}}",
			"forcedBindings" : {
				"location" : {
					"type" : "uri",
					"value" : "arces-monitor:Mars"
				}
			}
		},
		"OBSERVATIONS_BY_UNIT" : {
			"sparql" : "SELECT * WHERE {GRAPH <http://wot.arces.unibo.it/observation> {?observation rdf:type sosa:Observation ; rdfs:label ?label ; sosa:hasFeatureOfInterest ?location ; sosa:hasResult ?quantity . ?quantity rdf:type qudt:QuantityValue ; qudt:unit ?unit . OPTIONAL {?quantity qudt:numericValue ?value} . OPTIONAL {?observation sosa:resultTime ?timestamp}}}",
			"forcedBindings" : {
				"unit" : {
					"type" : "uri",
					"value" : "unit:DegreeCelsius"
				}
			}
		},
		"ALL_VALUES" : {
			"sparql" : "SELECT * WHERE {GRAPH <http://wot.arces.unibo.it/observation> {?observation rdf:type sosa:Observation ; rdfs:label ?label ; sosa:hasFeatureOfInterest ?location ; sosa:hasResult ?quantity . ?quantity rdf:type qudt:QuantityValue ; qudt:unit ?unit OPTIONAL {?quantity qudt:numericValue ?value} . OPTIONAL {?observation sosa:resultTime ?timestamp}}}",
			"forcedBindings" : {
				"observation" : {
					"type" : "uri",
					"value" : "arces-monitor:ObservationXYZ"
				}
			}
		},
		"MQTT_TOPICS_COUNT" : {
			"sparql" : "SELECT (COUNT(DISTINCT ?topic) AS ?topics) WHERE {GRAPH <http://wot.arces.unibo.it/mqtt/message> {?message rdf:type mqtt:Message ; mqtt:topic ?topic}}"
		},
		"MQTT_TOPICS" : {
			"sparql" : "SELECT DISTINCT * WHERE {GRAPH <http://wot.arces.unibo.it/mqtt/message> {?message rdf:type mqtt:Message ; mqtt:topic ?topic ; mqtt:hasBroker ?broker}}"
		},
		"MQTT_TOPIC_VALUE" : {
			"sparql" : "SELECT * WHERE {GRAPH <http://wot.arces.unibo.it/mqtt/message> {?message rdf:type mqtt:Message ; mqtt:topic ?topic; mqtt:value ?value}}",
			"forcedBindings" : {
				"topic" : {
					"type" : "literal",
					"value" : "mqttTopicXYZ"
				}
			}
		},
		"MQTT_MESSAGES" : {
			"sparql" : "SELECT * WHERE {GRAPH <http://wot.arces.unibo.it/mqtt/message> {?message rdf:type mqtt:Message ; mqtt:value ?value ; mqtt:topic ?topic ; mqtt:hasBroker ?broker;  time:inXSDDateTimeStamp ?timestamp}}"
		},
		"HISTORICAL_TRIPLES" : {
			"sparql" : "SELECT (COUNT(?log) AS ?count) WHERE {GRAPH <http://wot.arces.unibo.it/observation/history> {?log ?x ?y}}"
		},
		"LIVE_TRIPLES" : {
			"sparql" : "SELECT (COUNT(?log) AS ?count) WHERE {GRAPH <http://wot.arces.unibo.it/observation> {?log ?x ?y}}"
		},
		"PLACES_COUNT" : {
			"sparql" : "SELECT (COUNT(?place) AS ?count) WHERE {GRAPH <http://wot.arces.unibo.it/context> {?place rdf:type schema:Place}}"
		},
		"OBSERVATIONS_COUNT" : {
			"sparql" : "SELECT (COUNT(?observation) AS ?count) WHERE {GRAPH <http://wot.arces.unibo.it/observation> {?observation rdf:type sosa:Observation}}"
		},
		"FORECASTS_COUNT" : {
			"sparql" : "SELECT (COUNT(?forecast) AS ?count) WHERE {GRAPH <http://wot.arces.unibo.it/forecast> {?forecast rdf:type swamp:Forecast}}"
		}
{
	"host": "localhost",
	"oauth": {
		"enable": false,
		"register": "https://localhost:8443/oauth/register",
		"tokenRequest": "https://localhost:8443/oauth/token",
		"client_id": "WqSyq+UBdQpvZ6BSOZyJQb7RgKEizLi1tH7tvw5dTgMD4cU1fGXYtSo68/v952re",
		"client_secret": "Ua00xYQozuDQzxwf6o4icb/uU1saSivVhZVTTG9mKc7I6gB/dahElMESUGpXw1x7",
		"jwt": "xabtQWoH8RJJk1FyKJ78J8h8i2PcWmAugfJ4J6nMd+1jVSoiipV4Pcv8bH+8wJLJ2yRaVage8/TzdZJiz2jdRP8bhkuNzFhGx6N1/1mgmvfKihLheMmcU0pLj5uKOYWFb+TB98n1IpNO4G69lia2YoR15LScBzibBPpmKWF+XAr5TeDDHDZQK4N3VBS/e3tFL/yOhkfC9Mw45s3mz83oyeoFFePUX8MQIuqd3TIcjOhoPgYWd0E+L/EN5wItL5/n78pX/8mVZcpxdyNNqr3bVvrCi0I84mIAefwQ0GyPxFhUHu9PtVNQnXchZuFgppX/YDtOesZSxfIoffUpHFPBY5ec7G1BPy2Xju4QaAWxMdeZ5NUBuXk81T71X6v82ouCwKtD+cYYqc8DtxwhUtydgAVjU1EOTdZscvoAsY9J4XUjiaD9BrBENyiztB10j8+G6NfK3LB9a2I5fi/qQ7M7w6BzAnMvhPa58/nU0UFXndfh9/5UJd4N8oMw4dL9yWPpnpPED/LOdSOHXJ1DTyyELILPKRmNaM6aEoKhDV9y8ivw+ceurJU+9wfLFkJ2IakFXl3Gscyjx8lJnAsnxOlbkEdF36J3RVV2aU3it450HhN/BWnArOh7VKb8/eVu0L8qWHyNFa4zSvQZZHUz9szCNwV4B7qYCGu355rdTKFOSeOOc7sjPB8Im3YIseTUZQ3gG3z/Fd9EuIJKpX9DqPg+JPYJZdV5oKV2XUmy4w14T4Q9FJHATnsdP6+H14u12LNJm/uM9DmZ9Pui+im8OrF/dB3iMpN+N5FL8f/VkI6H3hyTpZv45Gxxb5kuXj2yP2GetO3aROZHCJwacVud5VcWskjgupZDo01+kG5FApwzGYJ2of3SIBuUCakDS9LLdEY8ekkxZu7hplOntr9bdffjJtnjmRWLLDT5p/AyqfOXIVDGkgw6kDApSYZo4pe9YmKGg5e287RGCQ4ExLi2LclagMk8kayt1A29wKocT8YgHqI=",
		"expires": "+s6urz6vJqZ1sS/SK8+LpA==",
		"type": "vvcpMsVLTnhHZ0KnT5PchA=="
	},
	"sparql11protocol": {
		"protocol": "https",
		"port": 8443,
		"query": {
			"path": "/secure/query",
			"method": "POST",
			"format": "JSON"
		},
		"update": {
			"path": "/secure/update",
			"method": "POST",
			"format": "JSON"
		}
	},
	"sparql11seprotocol": {
		"protocol": "wss",
		"availableProtocols": {
			"ws": {
				"port": 9000,
				"path": "/subscribe"
			},
			"wss": {
				"port": 9443,
				"path": "/secure/subscribe"
			}
		}
	},
	"extended": {
		"type": "basic",
		"base": 0,
		"clients": 10,
		"messages": 10
	},
	"graphs": {
		"default-graph-uri": "http://wot.arces.unibo.it/chat/",
		"named-graph-uri": "http://wot.arces.unibo.it/chat/",
		"using-graph-uri": "http://wot.arces.unibo.it/chat/",
		"using-named-graph-uri": "http://wot.arces.unibo.it/chat/"
	},
	"namespaces": {
		"schema": "http://schema.org/",
		"rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
		"chat": "http://wot.arces.unibo.it/chat#"
	},
	"updates": {
		"SEND": {
			"sparql": "WITH <http://wot.arces.unibo.it/chat/> INSERT {?message rdf:type schema:Message ; schema:text ?text ; schema:sender ?sender ; schema:toRecipient ?receiver; schema:dateSent ?time} WHERE {BIND(IRI(CONCAT(\"http://wot.arces.unibo.it/chat/message_\",STRUUID())) AS ?message) . ?sender rdf:type schema:Person . ?receiver rdf:type schema:Person . BIND(STR(now()) AS ?time)}",
			"forcedBindings": {
				"text": {
					"type": "literal",
					"value": "Ciao!"
				},
				"sender": {
					"type": "uri",
					"value": "chat:IamASender"
				},
				"receiver": {
					"type": "uri",
					"value": "chat:IamAReceiver"
				}
			}
		},
		"SET_RECEIVED": {
			"sparql": "WITH <http://wot.arces.unibo.it/chat/> INSERT {?message schema:dateReceived ?time} WHERE {?message rdf:type schema:Message . BIND(STR(now()) AS ?time)}",
			"forcedBindings": {
				"message": {
					"type": "uri",
					"value": "chat:ThisIsAMessage"
				}
			}
		},
		"REMOVE": {
			"sparql": "WITH <http://wot.arces.unibo.it/chat/> DELETE {?message ?p ?o} WHERE {?message rdf:type schema:Message ; ?p ?o}",
			"forcedBindings": {
				"message": {
					"type": "uri",
					"value": "chat:ThisIsAMessage"
				}
			}
		},
		"STORE_SENT": {
			"sparql": "WITH <http://wot.arces.unibo.it/chat/log/> INSERT DATA {?message schema:text ?text ; schema:sender ?sender ; schema:toRecipient ?receiver; schema:dateSent ?dateSent}",
			"forcedBindings": {
				"dateSent": {
					"type": "literal",
					"value": "2018-06-28T00:00:00",
					"datatype": "xsd:dateTime"
				},
				"message": {
					"type": "uri",
					"value": "chat:ThisIsAMessage"
				},
				"text": {
					"type": "literal",
					"value": "A message to be stored"
				},
				"sender": {
					"type": "uri",
					"value": "chat:IAmASender"
				},
				"receiver": {
					"type": "uri",
					"value": "chat:IAmAReceiver"
				}
			},
			"graphs": {
				"using-graph-uri": "http://wot.arces.unibo.it/chat/log",
				"using-named-graph-uri": "http://wot.arces.unibo.it/chat/log"
			}
		},
		"STORE_RECEIVED": {
			"sparql": "WITH <http://wot.arces.unibo.it/chat/log/> INSERT DATA {?message schema:dateReceived ?dateReceived}",
			"forcedBindings": {
				"dateReceived": {
					"type": "literal",
					"value": "2018-06-28T00:00:00",
					"datatype": "xsd:dateTime"
				},
				"message": {
					"type": "uri",
					"value": "chat:ThisIsAMessage"
				}
			},
			"graphs": {
				"using-graph-uri": "http://wot.arces.unibo.it/chat/log",
				"using-named-graph-uri": "http://wot.arces.unibo.it/chat/log"
			}
		},
		"REGISTER_USER": {
			"sparql": "WITH <http://wot.arces.unibo.it/chat/> DELETE {?x rdf:type schema:Person . ?x schema:name ?userName} INSERT {?person rdf:type schema:Person ; schema:name ?userName}  WHERE {BIND(IRI(CONCAT(\"http://wot.arces.unibo.it/chat/person_\",STRUUID())) AS ?person) OPTIONAL {?x rdf:type schema:Person . ?x schema:name ?userName}}",
			"forcedBindings": {
				"userName": {
					"type": "literal",
					"value": "My user name"
				}
			}
		},
		"DELETE_ALL": {
			"sparql": "DELETE {?s ?p ?o} WHERE {?s ?p ?o}"
		}
	},
	"queries": {
		"SENT": {
			"sparql": "SELECT ?message ?sender ?name ?text ?time WHERE {?message rdf:type schema:Message ; schema:text ?text ; schema:sender ?sender ; schema:toRecipient ?receiver ; schema:dateSent ?time . ?sender rdf:type schema:Person ; schema:name ?name . ?receiver rdf:type schema:Person} ORDER BY ?time",
			"forcedBindings": {
				"receiver": {
					"type": "uri",
					"value": "chat:IAmAReceiver"
				}
			}
		},
		"RECEIVED": {
			"sparql": "SELECT ?message ?time WHERE {?message schema:sender ?sender ; schema:dateReceived ?time ; rdf:type schema:Message}",
			"forcedBindings": {
				"sender": {
					"type": "uri",
					"value": "chat:IAmASender"
				}
			}
		},
		"LOG_SENT": {
			"sparql": "SELECT ?message ?sender ?receiver ?text ?dateSent WHERE {?message schema:text ?text ; schema:sender ?sender ; schema:toRecipient ?receiver; schema:dateSent ?dateSent}",
			"graphs": {
				"default-graph-uri": "http://wot.arces.unibo.it/chat/log/",
				"named-graph-uri": "http://wot.arces.unibo.it/chat/log/"
			}
		},
		"LOG_RECEIVED": {
			"sparql": "SELECT ?message ?dateReceived WHERE {?message schema:dateReceived ?dateReceived}",
			"graphs": {
				"default-graph-uri": "http://wot.arces.unibo.it/chat/log/",
				"named-graph-uri": "http://wot.arces.unibo.it/chat/log/"
			}
		},
		"USERS": {
			"sparql": "SELECT ?user ?userName WHERE {?user rdf:type schema:Person ; schema:name ?userName}"
		},
		"QUERY_ALL": {
			"sparql": "SELECT * WHERE {?s ?p ?o}"
		}
	}
}